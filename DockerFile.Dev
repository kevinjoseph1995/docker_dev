FROM base

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -y update && apt-get install unzip 

#Git
RUn apt-get install -y  git-all

# LLVM/Clang
RUN apt-get -y install clang-10 lldb-10 lld-10

#Std Lib
RUN apt-get -y install libc++-10-dev libc++abi-10-dev

# GDB 
RUN apt-get -y install gdb

#Cmake
COPY external-deps/cmake-3.18.1-Linux-x86_64.tar.gz .
RUN tar -xvf cmake-3.18.1-Linux-x86_64.tar.gz && rm cmake-3.18.1-Linux-x86_64.tar.gz && \
    cp -r cmake**/bin/* /usr/local/bin/ && cp -r cmake**/man/* /usr/local/man/ && \
    cp -r cmake**/share/* /usr/local/share/ && rm -rf cmake*

#  Minimalistic image library
COPY external-deps/CImg_latest.zip .
RUN unzip CImg_latest.zip && cp CImg-2.9.2_pre072920/CImg.h /usr/local/include && \
    rm -rf CImg*

# X11 lib dev headers

RUN apt-get -y install libx11-dev libxext-dev

#VSCode
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
  install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/microsoft-archive-keyring.gpg && \
  sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list' && \
  apt-get install -y apt-transport-https && apt-get update && apt-get -y install code # or code-insiders

# clang-format
RUN apt-get install -y clang-format

# Set Clang as the default compiler, cmake can take it from here
RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-10 30
RUN update-alternatives --install /usr/bin/cc cc /usr/bin/clang-10 30
RUN rm /usr/bin/ld && ln -s /usr/bin/ld.lld-10 /usr/bin/ld


